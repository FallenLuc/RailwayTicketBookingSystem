name: Release
run-name: ${{ github.workflow }}; Trigger ${{ github.ref_name }}; Runner ${{ github.actor }}
on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare environment
        uses: ./.github/actions/prepare

      - name: Build
        id: build
        run: pnpm build:prod
        shell: bash

      - name: Create ZIP artifact
        run: |
          zip -r build.zip build/

      - name: Upload build artifact for release
        uses: actions/upload-artifact@v4
        with:
          name: release-artifact
          path: build.zip

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: release-artifact
          path: release-files

      - name: Get Last Deployment URL
        id: get_deploy
        run: |
          DEPLOYMENT_URL=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/deployments" \
            | jq -r '.[0].payload.web_url')
          echo "DEPLOY_URL=$DEPLOYMENT_URL" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Automated release from GitHub Actions
            - Jira-Version: ${{ github.ref_name }}
            - Build: #${{ github.run_number }}
            - Commit: ${{ github.sha }}
            - Deploy URL: ${{ env.DEPLOY_URL }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release-files/build.zip
          asset_name: build-${{ github.ref_name }}.zip
          asset_content_type: application/zip
